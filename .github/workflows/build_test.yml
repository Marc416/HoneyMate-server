name: PR Test

on:
  push:
    branches:
      - 'master'
      - 'develop'
  pull_request:
    branches:
      - '**'


permissions: write-all

jobs:
#      - name: Cache Gadle packages
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
  common-jobs:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'server') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

  server-contents:
    if: contains(github.event.pull_request.labels.*.name, 'server-contents')
    needs: common-jobs
    runs-on: ubuntu-latest
    steps:
      - name : label 별 분기 처리 되는지 확인 테스트
        run: |
          cd contents
          sh test.sh

  server-commerce:
    if: contains(github.event.pull_request.labels.*.name, 'server-commerce')
    needs: common-jobs
    runs-on: ubuntu-latest
    steps:
      - name : label 별 분기 처리 되는지 확인 테스트
        run: |
          cd commerce
          sh test.sh
  server-crm:
    if: contains(github.event.pull_request.labels.*.name, 'server-crm')
    needs: common-jobs
    runs-on: ubuntu-latest
    steps:
      - name: label 별 분기 처리 되는지 확인 테스트
        run: |
          cd crm
          sh test.sh

      # 아래 코드는 테스트 이후 주석 해제
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew

#      - name: Test With Gradle
#        run: ./gradlew --info test

      # 테스트 후 Result를 보기위해 Publish Unit Test Results step 추가
#      - name: Publish Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v2
#        if: always()  # 테스트가 실패하여도 Report를 보기 위해 `always`로 설정
#        with:
#          files: build/test-results/**/*.xml
